//#Область ОписаниеПеременных
//#КонецОбласти

#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Таймзона = 7;
КонецПроцедуры

#КонецОбласти

//@skip-check module-region-empty
#Область ОбработчикиСобытийЭлементовШапкиФормы
#КонецОбласти

//#Область ОбработчикиСобытийЭлементовТаблицыФормы<ИмяТаблицыФормы>
//// Код процедур и функций
//#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТЗ_Счета
&НаКлиенте
Процедура ТЗ_СчетаСоздатьПриИзменении(Элемент)
//	ТекДанные = Элементы.ТЗ_Счета.ТекущиеДанные;
//	Если ТекДанные.УжеЕсть Тогда
//		ТекДанные.Создать = Ложь;
//	КонецЕсли;
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура Загрузить(Команда)
	Оповещение = Новый ОписаниеОповещения("ЗагрузитьДанныеИзExcelВыбораФайла", ЭтотОбъект);
	ПараметрыЗагрузки = ФайловаяСистемаКлиент.ПараметрыЗагрузкиФайла();
	ПараметрыЗагрузки.ИдентификаторФормы = УникальныйИдентификатор;
	ПараметрыЗагрузки.Диалог.Заголовок = НСтр("ru = 'Выберите файл Excel для загрузки'");
	ПараметрыЗагрузки.Диалог.Фильтр = НСтр("ru = 'Файлы Excel (*.xlsx)|*.xlsx|Все файлы(*.*)|*.*'");
	ПараметрыЗагрузки.Интерактивно = Истина;
	ФайловаяСистемаКлиент.ЗагрузитьФайл(Оповещение, ПараметрыЗагрузки, ИмяФайла);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСчета(Команда)
	СоздатьСчетаНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСправочникАкции(Команда)
	ЗаполнитьСправочникАкцииНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервере
Процедура ЗаполнитьСправочникАкцииНаСервере()
	Для Каждого стр Из ТЗ_Акции Цикл
		Если НЕ ЗначениеЗаполнено(стр.Акция) Тогда
			Справочники.Акции.ЗагрузитьАкциюС_MOEX(стр.SECID);
		КонецЕсли;
	КонецЦикла;
	ВыделитьАкцииИзФайла();
КонецПроцедуры

&НаСервере
Процедура СоздатьСчетаНаСервере()
	ЧислоСозданных = 0;
	Для Каждого стр Из ТЗ_Счета Цикл
		Если стр.Создать Тогда
			ЧислоСозданных = ЧислоСозданных + 1;
			Портфель = Справочники.Портфели.СоздатьЭлемент();
			Портфель.НомерДоговора = стр.НомерДоговора;
			Портфель.Наименование = стр.НаименованиеПортфеля;
			Портфель.Записать();
		КонецЕсли;
	КонецЦикла;
	СтрСообщение = СтрШаблон(НСтр("ru = 'Создано %1 портфелей'"), ЧислоСозданных);
	ОбщегоНазначения.СообщитьПользователю(СтрСообщение);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДанныеИзExcelВыбораФайла(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	СчитатьДанныеНаСервере(Результат);
КонецПроцедуры

&НаСервере
Процедура СчитатьДанныеНаСервере(ДанныеФайла)
	ИмяФайла = ДанныеФайла.Имя;
	РезультатЧтения = ПрочитатьExcelСбербанка(ДанныеФайла);

	ВывестиТаблицуЗначенияВТаблицуНаФорме(РезультатЧтения, "ТЗ_Файл");
	ВыделитьСчетаИзФайла();
	ВыделитьАкцииИзФайла();
КонецПроцедуры

&НаСервере
Процедура ВывестиТаблицуЗначенияВТаблицуНаФорме(ТаблицаЗначений, ТабРеквизит, ТабЭлементФормы = Неопределено)
	Если ТабЭлементФормы = Неопределено Тогда
		ТабЭлементФормы = ТабРеквизит;
	КонецЕсли; 
	
	// Собирается инофрмация по добавленным ранее элементам формы и реквизитам, на которые элементы формы ссылаются.
	УдаляемыеРеквизиты = Новый Массив;
	УдаляемыеЭлементы = Новый Массив;
	Для каждого Эл Из Элементы[ТабЭлементФормы].ПодчиненныеЭлементы Цикл
		УдаляемыеРеквизиты.Добавить(Эл.ПутьКДанным);
		УдаляемыеЭлементы.Добавить(Эл);
	КонецЦикла; 
	Для каждого Эл Из УдаляемыеЭлементы Цикл
		Элементы.Удалить(Эл);
	КонецЦикла; 
	
	// Добавляются колонки из ТаблицыЗначений в реквизит таблицы ТабРеквизит
	НовыеРеквизиты = Новый Массив;
	Для Каждого Колонка Из ТаблицаЗначений.Колонки Цикл
		НовыйРеквизит = Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения, ТабРеквизит, Колонка.Заголовок);
		НовыеРеквизиты.Добавить(НовыйРеквизит);
	КонецЦикла;

	//Удаляются старые и устанавливаются новые реквизиты
	ИзменитьРеквизиты(НовыеРеквизиты, УдаляемыеРеквизиты);
	
	// Добавляются колонки из ТаблицыЗначений в элементы ТабЭлементФормы со ссылкой на колонки в ТабРеквизит
	Для Каждого Колонка Из ТаблицаЗначений.Колонки Цикл
		НовыйЭлемент = Элементы.Добавить( ТабРеквизит + "_" + Колонка.Имя, Тип("ПолеФормы"), Элементы[ТабЭлементФормы]);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеНадписи; //Или ПолеВвода, или что-то другое;
		НовыйЭлемент.ПутьКДанным = ТабРеквизит + "." + Колонка.Имя;
	КонецЦикла;

	// В созданный реквизит загружается ТЗ
	ЭтотОбъект[ТабРеквизит].Загрузить(ТаблицаЗначений);
КонецПроцедуры

&НаСервере
Функция ПрочитатьExcelСбербанка(ДанныеФайла)
	ИмяФайла = ДанныеФайла.Имя;
	ДвоичныеДанные = ПолучитьИЗВременногоХранилища(ДанныеФайла.Хранение);
	Расширение = ОбщегоНазначенияКлиентСервер.РасширениеБезТочки(ОбщегоНазначенияКлиентСервер.ПолучитьРасширениеИмениФайла(ДанныеФайла.Имя));
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(Расширение);
	ДвоичныеДанные.Записать(ИмяВременногоФайла);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Прочитать(ИмяВременногоФайла, СпособЧтенияЗначенийТабличногоДокумента.Текст); // либо значение
	
	УдалитьФайлы(ИмяВременногоФайла);
	
	Построитель = Новый ПостроительОтчета;
	Построитель.ИсточникДанных = Новый ОписаниеИсточникаДанных(ТабличныйДокумент.Область(1, 1, ТабличныйДокумент.ВысотаТаблицы, ТабличныйДокумент.ШиринаТаблицы));
	Построитель.Выполнить();
	РезультатЧтения = Построитель.Результат.Выгрузить();
	РезультатЧтения.Колонки.Добавить("ДатаЗаключения2", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	РезультатЧтения.Колонки.Добавить("Количество2", ОбщегоНазначения.ОписаниеТипаЧисло(10));
	РезультатЧтения.Колонки.Добавить("КомиссияБанка2", ОбщегоНазначения.ОписаниеТипаЧисло(10,2));
	РезультатЧтения.Колонки.Добавить("Цена2", ОбщегоНазначения.ОписаниеТипаЧисло(15,6));
	РезультатЧтения.Колонки.Добавить("КомиссияТорговойСистемы2", ОбщегоНазначения.ОписаниеТипаЧисло(10,2));
	
	Для Каждого стр Из РезультатЧтения Цикл
		стр.ДатаЗаключения2 = СтроковыеФункцииКлиентСервер.СтрокаВДату(стр.ДатаЗаключения, ЧастиДаты.ДатаВремя) - Таймзона*3600;
		стр.Количество2 = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(стр.Количество);    	
		стр.КомиссияБанка2 = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(стр.КомиссияБанка);    	
		стр.Цена2 = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(стр.Цена);    	
		стр.КомиссияТорговойСистемы2 = СтроковыеФункцииКлиентСервер.СтрокаВЧисло(стр.КомиссияТорговойСистемы);    	
	КонецЦикла;
	Возврат РезультатЧтения;
КонецФункции

&НаСервере
Процедура ВыделитьСчетаИзФайла()
	СчетаИзФайла = ТЗ_Файл.Выгрузить().Скопировать(,"НомерДоговора");	
	СчетаИзФайла.Свернуть("НомерДоговора");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СчетаИзФайла.НомерДоговора
		|ПОМЕСТИТЬ ВТ_СчетаИзФайла
		|ИЗ
		|	&СчетаИзФайла КАК СчетаИзФайла
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СчетаИзФайла.НомерДоговора,
		|	ВЫБОР
		|		КОГДА Портфели.НомерДоговора ЕСТЬ NULL
		|			ТОГДА ВТ_СчетаИзФайла.НомерДоговора
		|		ИНАЧЕ Портфели.Наименование
		|	КОНЕЦ КАК НаименованиеПортфеля,
		|	ВЫБОР
		|		КОГДА Портфели.НомерДоговора ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК УжеЕсть,
		|	ЛОЖЬ КАК Создать
		|ИЗ
		|	ВТ_СчетаИзФайла КАК ВТ_СчетаИзФайла
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Портфели КАК Портфели
		|		ПО ВТ_СчетаИзФайла.НомерДоговора = Портфели.НомерДоговора
		|		И НЕ Портфели.ПометкаУдаления";
	Запрос.Параметры.Вставить("СчетаИзФайла", СчетаИзФайла);
	Выгрузка = Запрос.Выполнить().Выгрузить();
	
	ТЗ_Счета.Загрузить(Выгрузка);
КонецПроцедуры

&НаСервере
Процедура ВыделитьАкцииИзФайла()
	АкцииИзФайла = ТЗ_Файл.Выгрузить().Скопировать(,"КодФинансовогоИнструмента, ТипФинансовогоИнструмента, ТипРынка");	
	АкцииИзФайла.Свернуть("КодФинансовогоИнструмента, ТипФинансовогоИнструмента, ТипРынка");
	
	
	// Акция, Депозитрная расписка, Пай
	// Фондовый рынок
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	АкцииИзФайла.КодФинансовогоИнструмента КАК SECID,
		|	АкцииИзФайла.ТипФинансовогоИнструмента,
		|	АкцииИзФайла.ТипРынка
		|ПОМЕСТИТЬ втАкции
		|ИЗ
		|	&АкцииИзФайла КАК АкцииИзФайла
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втАкции.SECID
		|ПОМЕСТИТЬ втАкции1
		|ИЗ
		|	втАкции КАК втАкции
		|ГДЕ
		|	втАкции.ТипРынка = ""Фондовый рынок""
		|	И втАкции.ТипФинансовогоИнструмента В (""Акция"", ""Депозитарная расписка"", ""Пай"")
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втАкции1.SECID,
		|	АкцииТорговыеКоды.Ссылка как Акция
		|ИЗ
		|	втАкции1 КАК втАкции1
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Акции.ТорговыеКоды КАК АкцииТорговыеКоды
		|		ПО втАкции1.SECID = АкцииТорговыеКоды.Код";
		
	Запрос.Параметры.Вставить("АкцииИзФайла", АкцииИзФайла);
	Выгрузка = Запрос.Выполнить().Выгрузить();
	ТЗ_Акции.Загрузить(Выгрузка);
КонецПроцедуры

#КонецОбласти
