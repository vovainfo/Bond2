
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
Процедура ЗагрузитьС_MOEXНаСервере(Параметры, АдресРезультата) Экспорт
	URL = "https://iss.moex.com/iss/history/engines/stock/markets/shares/securities/changeover.json?iss.meta=off&iss.json=extended";

	ДопПараметры = КлиентHTTPКлиентСервер.НовыеДополнительныеПараметры();
	//@skip-check bsl-legacy-check-returning-type-for-environment
	Ответ = КлиентHTTPКлиентСервер.ТелоОтветаКакJSON(ДопПараметры).Получить(URL, , ДопПараметры);
	
	Если Ответ.КодСостояния <> 200 Тогда
		ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						        	НСтр("ru='Ошибка получения данных с биржи. Код ответа <%1>'"),
						        	Ответ.КодСостояния);
		ОбщегоНазначения.СообщитьПользователю(ТекстПредупреждения);		
		Возврат;		
	КонецЕсли;
	
	ТелоОтвета = Ответ.Тело[1];
	
	Если ТелоОтвета.changeover.Количество() = 0 Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru='Ошибка получения данных с биржи. Список не загружен.'"));		
		Возврат;		
	КонецЕсли;
	
	БондОбщий.ОчиститьСправочник(Справочники.Переименования);
	ВсегоЗаписей = ТелоОтвета.changeover.Количество();
	ТекущаяЗапись = 1;	

	Для Каждого эл Из ТелоОтвета.changeover Цикл
		ПереименованияОбъект = СоздатьЭлемент();
		ПереименованияОбъект.action_date = ПрочитатьДатуJSON(эл.action_date, ФорматДатыJSON.ISO); 
		ПереименованияОбъект.old_secid = эл.old_secid;
		ПереименованияОбъект.new_secid = эл.new_secid; 
		ПереименованияОбъект.Наименование = ПереименованияОбъект.old_secid + " --> " + ПереименованияОбъект.new_secid;
		ПереименованияОбъект.Записать();
		
		ПроцентВыполнения = Окр((ТекущаяЗапись/ВсегоЗаписей)*100, 0);

		ДлительныеОперации.СообщитьПрогресс(ПроцентВыполнения, ПереименованияОбъект.Наименование);
		ТекущаяЗапись = ТекущаяЗапись + 1;		
	КонецЦикла;
	СтрРезультат = СтрШаблон(НСтр("ru='Загружено %1 записей'"), ВсегоЗаписей);
	ПоместитьВоВременноеХранилище(СтрРезультат, АдресРезультата);
КонецПроцедуры

// Список переименований для secid.
// 
// Параметры:
//  secid - Строка
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Список переименований:
// * Код - Строка 
// * ДатаНачала - Дата 
// * ДатаОкончания - Дата
Функция СписокПереименований(secid) Экспорт
	Результат = Новый ТаблицаЗначений();
	
	ТипСтрока = ОбщегоНазначения.ОписаниеТипаСтрока(12);
	ТипДата = ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата);
	
	Результат.Колонки.Добавить("Код", ТипСтрока);
	Результат.Колонки.Добавить("ДатаНачала", ТипДата);
	Результат.Колонки.Добавить("ДатаОкончания", ТипДата);
	
	// ищем записи "до" secid
	Тек_secid = secid;
	Пока Истина Цикл
		Выборка = ВыборкаПо_new_secid(Тек_secid);
		Если Выборка.Следующий() Тогда
			Элемент = Результат.Добавить();
			Элемент.Код = Выборка.new_secid;
			Элемент.ДатаНачала = Выборка.action_date;
			Тек_secid = Выборка.old_secid;
		Иначе
			Элемент = Результат.Добавить();
			Элемент.Код = Тек_secid;
			Элемент.ДатаНачала = Дата(1900, 1, 1);
			Прервать;				
		КонецЕсли;
	КонецЦикла;

	// ищем записи "после" secid
	Тек_secid = secid;
	Пока Истина Цикл
		Выборка = ВыборкаПо_old_secid(Тек_secid);
		Если Выборка.Следующий() Тогда
			Элемент = Результат.Добавить();
			Элемент.Код = Выборка.new_secid;
			Элемент.ДатаНачала = Выборка.action_date;
			Тек_secid = Выборка.new_secid;
		Иначе
			Прервать;				
		КонецЕсли;
	КонецЦикла;
	Если Результат.Количество() = 1 Тогда
		Результат[0].ДатаОкончания = Дата(2100, 1, 1);
	Иначе
		Результат.Сортировать("ДатаНачала Возр");
		Для й = 0 По Результат.Количество()-2 Цикл
			Результат[й].ДатаОкончания = Результат[й+1].ДатаНачала - 24*60*60;			
		КонецЦикла;
		Результат[Результат.Количество()-1].ДатаОкончания = Дата(2100,1,1);
	КонецЕсли;	
	
	Возврат Результат;	
КонецФункции
#КонецОбласти

//@skip-check module-region-empty
#Область ОбработчикиСобытий
#КонецОбласти

//@skip-check module-region-empty
#Область СлужебныйПрограммныйИнтерфейс
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ВыборкаПо_new_secid(new_secid)
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Переименования.action_date,
		|	Переименования.old_secid,
		|	Переименования.new_secid
		|ИЗ
		|	Справочник.Переименования КАК Переименования
		|ГДЕ
		|	НЕ Переименования.ПометкаУдаления
		|	И Переименования.new_secid = &new_secid";
	
	Запрос.УстановитьПараметр("new_secid", new_secid);
	Возврат Запрос.Выполнить().Выбрать();	
КонецФункции

Функция ВыборкаПо_old_secid(old_secid)
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Переименования.action_date,
		|	Переименования.old_secid,
		|	Переименования.new_secid
		|ИЗ
		|	Справочник.Переименования КАК Переименования
		|ГДЕ
		|	НЕ Переименования.ПометкаУдаления
		|	И Переименования.old_secid = &old_secid";
	
	Запрос.УстановитьПараметр("old_secid", old_secid);
	Возврат Запрос.Выполнить().Выбрать();	
КонецФункции

#КонецОбласти

#КонецЕсли
